# Generated by Django 5.2.1 on 2025-06-14 18:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MatchDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='esport/static/players')),
                ('country', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('logo', models.ImageField(upload_to='esport/static/teams')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('date_started', models.DateTimeField(verbose_name='date started')),
                ('slug', models.SlugField(default='<django.db.models.fields.CharField>')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('scheduled_time', models.DateTimeField()),
                ('best_of', models.PositiveSmallIntegerField(choices=[(1, 'BO1'), (3, 'BO3'), (5, 'BO5')], default=1)),
                ('winner_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('loser_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('match_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='esport.matchday')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kills', models.PositiveIntegerField(default=0)),
                ('deaths', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esport.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esport.player')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_score_winner', models.PositiveSmallIntegerField()),
                ('predicted_score_loser', models.PositiveSmallIntegerField()),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('score_correct', models.BooleanField(blank=True, null=True)),
                ('points_awarded', models.FloatField(blank=True, null=True)),
                ('mvp_points', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('fantasy_pick', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='esport.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esport.match')),
            ],
        ),
    ]
